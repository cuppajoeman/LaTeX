priority -50

# Common Words

snippet cor "correct" w
correct $0
endsnippet

snippet cnt "cannot" w
cannot $0
endsnippet

snippet exc "exceed" w
exceed $0
endsnippet

snippet no "number" w
number $0
endsnippet

snippet cons "consider" w
consider $0
endsnippet

snippet coe "coefficients" w
coefficients $0
endsnippet

snippet plp "parallelpiped" w
parallelpiped $0
endsnippet

snippet plg "parallelogram" w
parallelogram $0
endsnippet

snippet ind "indeed" w
indeed $0
endsnippet

snippet orie "oriented" w
oriented $0
endsnippet

snippet pos "positive" w
positive${1:ly} $0
endsnippet

snippet contrap "contrapositive" w
contrapositive $0
endsnippet

snippet neg "negative" w
negative${1:ly} $0
endsnippet

snippet rec "recognize" w
recognize $0
endsnippet

snippet dif "different" w
different $0
endsnippet

snippet sq "square" w
square $0
endsnippet

snippet cb "cube" w
cube $0
endsnippet

snippet sph "sphere" w
sphere $0
endsnippet

snippet vol "volume" w
volume $0
endsnippet

snippet ori "origin" w
origin $0
endsnippet

snippet locd "located" w
located $0
endsnippet

snippet lwr "lower" w
lower $0
endsnippet

snippet upr "upper" w
upper $0
endsnippet

snippet std "standard" w
standard $0
endsnippet

snippet sim "similar(ly)" w
similar${1:ly} $0
endsnippet

snippet simlt "simultaneously" w
simultaneously $0
endsnippet

snippet rep "represent" w
represent $0
endsnippet

snippet equi "equivalently" w
${1:e}quivalently $0
endsnippet

snippet cont "contradiction" w
contradiction $0
endsnippet

snippet invs "inverse" w
inverse $0
endsnippet

snippet inv "invert" w
invert${1:ible} $0
endsnippet

snippet len "length" w
length $0
endsnippet

snippet defd "defined" w
defined $0
endsnippet

snippet def "definition" w
definition $0
endsnippet

snippet mul "multiplication" w
multiplication $0
endsnippet

snippet mulpl "multiple(s)" w
multiple${1:s} $0
endsnippet

snippet div "division" w
division $0
endsnippet

snippet add "addition" w
addition $0
endsnippet

snippet subt "subtraction" w
subtraction $0
endsnippet

snippet inc "incorrect" w
incorrect $0
endsnippet

snippet prp "properties" w
properties $0
endsnippet

snippet obs "observation" w
observ${1:ation} $0
endsnippet

snippet conv "convert(s)" w
convert${1:s} $0
endsnippet

snippet min "minimum" w
minimum $0
endsnippet

snippet max "maximum" w
maximum $0
endsnippet

snippet lim "limit" w
maximum $0
endsnippet

snippet log "logarithm" w
logarithm $0
endsnippet

snippet mod "modulo" w
modulo $0
endsnippet

snippet ran "range" w
range $0
endsnippet

snippet rhs "right hand side" w
right hand side $0
endsnippet

snippet lhs "left hand side" w
left hand side $0
endsnippet

#snippet tan "tangent function" w
#tangent $0
#endsnippet

snippet fun "function" w
function $0
endsnippet

snippet hyp "hypotenuse" w
hypotenuse $0
endsnippet

#snippet cos "cosine function" w
#cosine $0
#endsnippet

#snippet sin "sine function" w
#sine $0
#endsnippet

snippet cw "clockwise" w
clockwise $0
endsnippet

snippet ccw "counter clockwise" w
counter clockwise $0
endsnippet

snippet rot "rotation" w
rotation $0
endsnippet

snippet refl "reflection" w
reflection $0
endsnippet

snippet refld "reflected" w
reflected $0
endsnippet

# Proof and Writing

# Function words

snippet tt "that" w
that $0
endsnippet

snippet tn "then" w
then $0
endsnippet

snippet ti "that is" w
${1:t}hat is $0
endsnippet

snippet wt "what" w
what $0
endsnippet

snippet dt "determine" w
determine $0
endsnippet

snippet sn "since" w
since $0
endsnippet

snippet ts "thus" w
thus $0
endsnippet

snippet t "the" w
the $0
endsnippet

snippet Th "The" w
The $0
endsnippet

snippet a "and" w
and $0
endsnippet

snippet ass "assume" w
assume $0
endsnippet

snippet wc "we can" w
we can $0
endsnippet

snippet wh "we have" w
we have $0
endsnippet

snippet wk "we know" w
${1:w}e know $0
endsnippet

snippet twk "thus we know" w
${1:t}hus we know $0
endsnippet

snippet ho "hold(s)" w
hold${1:s} $0
endsnippet

snippet ia "is a" w
is a $0
endsnippet

snippet ina "is not a" w
is not a $0
endsnippet

snippet wts "want to show" w
want to show $0
endsnippet

snippet wws "we will show" w
${1:w}e will show $0
endsnippet

snippet wwn "we will now" w
${1:w}e will now $0
endsnippet

snippet wwp "we will prove" w
we will prove $0
endsnippet

snippet ift "it follows that" w
it follows that $0
endsnippet

snippet fol "following" w
following $0
endsnippet

snippet st "such that" w
such that $0
endsnippet

snippet sot "so that" w
so that $0
endsnippet

snippet sotn "so then" w
so then $0
endsnippet

snippet rc "recall" w
recall $0
endsnippet

snippet bc "because" w
because $0
endsnippet

snippet fa "for all" w
for all $0
endsnippet

snippet fe "for example" w
for example $0
endsnippet

snippet fay "for any" w
for any $0
endsnippet

snippet fs "for some" w
for some $0
endsnippet

snippet te "there exists" w
there exists $0
endsnippet

snippet ex "exist" w
exists $0
endsnippet

snippet twc "(T/t)hus we conclude" w
${1:t}hus we conclude $0
endsnippet

snippet wkt "we know that" w
${1:w}e know that $0
endsnippet

snippet var "variable" w
variable $0
endsnippet


snippet wlog "without loss of generality" w
without loss of generality $0
endsnippet

snippet iff "if and only if" w
if and only if $0
endsnippet

snippet IH "Induction Hypothesis" w
Induction Hypothesis $0
endsnippet


# Linear Algebra
snippet col "column(s)" w
column${1:s} $0
endsnippet

snippet rred "row reduction" w
row reduction $0
endsnippet

snippet rref "reduced row echelon form" w
reduced row echelon form $0
endsnippet

snippet mat "matrix" w
matrix $0
endsnippet

snippet lc "linear combination" w
linear combination $0
endsnippet

snippet rnt "Rank Nullity Theorem" w
Rank Nullity Theorem $0
endsnippet

snippet ntlc "linear combination" w
non-trivial linear combination $0
endsnippet

snippet pvt "pivot(s)" w
pivot${1:s} $0
endsnippet

snippet li "linear independent" w
linear independent $0
endsnippet

snippet lyi "linearly independent" w
linearly independent $0
endsnippet

snippet lyd "linearly dependent" w
linearly dependent $0
endsnippet

snippet ld "linearly dependent" w
linear dependent $0
endsnippet

snippet sca "scalar" w
scalar${1:s} $0
endsnippet

snippet vec "vector" w
vector${1:s} $0
endsnippet

snippet nspace "null space" w
null space $0
endsnippet

snippet ker "kernel" w
kernel $0
endsnippet

snippet lt "linear transformation" w
linear transformation $0
endsnippet

snippet trns "transformation" w
transformation $0
endsnippet

snippet vspace "vector space" w
vector space$0 $0
endsnippet

snippet dim "dimension" w
dimension${1:al} $0
endsnippet

snippet det "determinant" w
determinant $0
endsnippet

# Calculus

snippet oto "one-to-one" w
one-to-one $0
endsnippet

snippet rl "Real Numbers" w
real numbers $0
endsnippet

snippet cpx "Real Numbers" w
complex numbers $0
endsnippet

snippet sup "supremum" w
supremum $0
endsnippet

snippet inf "infimum" w
infimum $0
endsnippet

snippet soln "infimum" w
infimum $0
endsnippet

snippet polyn "polynomial" w
polynomial $0
endsnippet

snippet cts "continuous" w
continuous $0
endsnippet

snippet inj "injective" w
injective $0
endsnippet

snippet surj "surjective" w
surjective $0
endsnippet

snippet bij "bijective" w
bijective $0
endsnippet

snippet nbd "neighbourhood" w
neighbourhood $0
endsnippet

